{{> initial.conf}}

http {

    {{> http.conf}}
    
    server {
        listen 443 ssl {{^disable_http2}}http2{{/disable_http2}};

        server_name {{host}};

        {{^development}}
        {{> auto-ssl.conf}}
        {{/development}}

        {{#development}}
        ssl_certificate  /etc/blot/blot.development.crt;
        ssl_certificate_key /etc/blot/blot.development.key;
        {{/development}}

        {{> blot-site.conf}}
    }

    server {
        listen 80;
        server_name {{host}}; 
        return 301 https://$host$request_uri;
    }

    server {
        listen 80;
        listen 443 ssl {{^disable_http2}}http2{{/disable_http2}};
        server_name webhooks.{{host}}; 

        {{^development}}
        {{> auto-ssl.conf}}
        {{/development}}

        location / {
            {{> reverse-proxy.conf}}
        }
    }

    server {
       listen 127.0.0.1:80;
        
        location = /inspect {
            content_by_lua_block {
                cacher:inspect(ngx)
            }
        }

        location = /rehydrate {
            content_by_lua_block {
                local message = cacher:rehydrate(ngx)
                ngx.say(message)
            }
        }

        location = /purge {
            if ($request_method = PURGE) {
                content_by_lua_block {
                    cacher:purge(ngx)
                }
            }
        }

        # otherwise, return 404
        location / {
            return 404;
        }
    }

    server {
        listen 80 default_server;
        listen 443 ssl {{^disable_http2}}http2{{/disable_http2}} default_server;

        {{^development}}
        {{> auto-ssl.conf}}
        {{/development}}

        {{#development}}
        ssl_certificate  /etc/blot/blot.development.crt;
        ssl_certificate_key /etc/blot/blot.development.key;
        {{/development}}

        {{> blot-blogs.conf}}
    }    

}